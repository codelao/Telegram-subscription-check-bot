import logging
from aiogram import Bot, Dispatcher, executor, types
import markups as nav

TOKEN = '...'
CHANNEL_ID = '@...'
NOT_SUB = '–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª'
ANOTHER_NOT_SUB = '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑'

logging.basicConfig(level=logging.INFO)

#Bot initialization
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

###Subscribe checking###
def check_sub(chat_member):
    #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —É—á–∞c—Ç–Ω–∏–∫ –∫–∞–Ω–∞–ª–∞, —Ç–æ –µ–≥–æ —Å—Ç–∞—Ç—É—Å –Ω–µ —Ä–∞–≤–µ–Ω left –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True, –µ—Å–ª–∏ status == left, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º False, —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª
    if chat_member['status'] != 'left':
        return True
    else:
        return False


#start message
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    if message.chat.type == 'private':
        if check_sub(await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=message.from_user.id)):
            await bot.send_message(message.from_user.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!üëã', reply_markup=nav.profileKeyboard)
        else:
            await message.reply(NOT_SUB, reply_markup=nav.checkSubMenu)

#commands
@dp.message_handler()
async def bot_message(message: types.Message):
    if message.chat.type == 'private':
        #if user will try to write '–ü—Ä–æ—Ñ–∏–ª—å' by himself
        if check_sub(await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=message.from_user.id)):
            if message.text == '–ü—Ä–æ—Ñ–∏–ª—å':
                await bot.send_message(message.from_user.id, "üìÉ–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å: " + message.from_user.first_name)
            else:
                await bot.send_message(message.from_user.id, '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã/—Å–ª–æ–≤–∞üòî')
        else:
            await message.reply(NOT_SUB, reply_markup=nav.checkSubMenu)



@dp.callback_query_handler(text='subdone')
async def subdone(message: types.Message):
    #delete message with sub buttons and open bot menu after subscribing
    await bot.delete_message(message.from_user.id, message.message.message_id)
    if check_sub(await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=message.from_user.id)):
        await bot.send_message(message.from_user.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!üëã', reply_markup=nav.profileKeyboard)
    else:
        #send other text if sub is still not found
        await bot.send_message(message.from_user.id, ANOTHER_NOT_SUB, reply_markup=nav.checkSubMenu)


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates = True)